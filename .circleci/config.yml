# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build_linux:
    machine: true
    steps:
      - checkout
      - run:
          name: build
          command: |
            virtualenv venv
            . venv/bin/activate
            python setup.py install
      - run:
          name: test
          command: |
            virtualenv venv
            . venv/bin/activate
            python setup.py test
  build_macos:
    macos:
        xcode: "9.0"
    steps:
      - checkout
      - run:
          name: build
          command: |
            virtualenv venv
            . venv/bin/activate
            python setup.py install
      - run:
          name: test
          command: |
            virtualenv venv
            . venv/bin/activate
  build:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/workspace
    steps:
      - run:
          name: debug
          command: |
              pwd
              ls -la .
      - checkout
      - run:
          name: CircleCI vars
          command: |
              echo "CIRCLE_PROJECT_REPONAME = $CIRCLE_PROJECT_REPONAME"
              echo "CIRCLE_PROJECT_USERNAME = $CIRCLE_PROJECT_USERNAME"
              echo "CIRCLE_PULL_REQUESTS = $CIRCLE_PULL_REQUESTS"
              echo "CIRCLE_BRANCH = $CIRCLE_BRANCH"
              echo "CIRCLE_PR_REPONAME = $CIRCLE_PR_REPONAME"
              echo "CIRCLE_SHA1 = $CIRCLE_SHA1"
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.py" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            python setup.py install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup.py" }}
      - run:
          name: debug
          command: |
              pwd
              ls -la .
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - .

  test:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/workspace
    steps:
      - run:
          name: debug
          command: |
              pwd
              ls -la .
      - attach_workspace:
          at: ~/workspace
      - run:
          name: debug
          command: |
              pwd
              ls -la .
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python setup.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - store_artifacts:
          path: coverage.xml
          destination: coverage

      - store_test_results:
          path: test-reports

workflows:
    version: 2
    build_and_test:
        jobs:
            - build
            - build_linux
            - build_macos
            - test:
                requires:
                    - build
